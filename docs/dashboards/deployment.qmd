---
title: "Dashboard Deployment"
lightbox: auto
---

## Overview

There are a wide variety of ways to deploy dashboards created using Quarto. The mechanics of deployment are different depending on whether you are publishing a [Static Dashboard](#static-dashboards) (with no server dependencies) or a [Shiny Dashboard](#shiny-dashboards). Both scenarios are covered in detail below.

## Static Dashboards {#static-dashboards}

If you are deploying a static dashboard (i.e. not using Shiny for interactivity) then you can publish dashboards to any web server. Quarto includes a `quarto publish` command to make it easy to publish to a few popular services as well as automate publishing via Continuous Integration (CI).

To get started, review the documentation for using one of the following publishing services:

{{< include /docs/publishing/_providers.md >}}

```{=html}
<style type="text/css">
/* remove confluence */
#static-dashboards table tr:nth-child(5) {
  display: none;
}
</style>
```
## Shiny Dashboards {#shiny-dashboards}

Dashboards that use [Shiny for Python](/docs/dashboards/interactivity/shiny-python/index.qmd) or [Shiny for R](/docs/dashboards/interactivity/shiny-r.qmd) are web applications that require a server for deployment (so they can't just be deployed to a generic web host). Deployment options for Shiny applications include:

-   Public hosting services like [shinyapps.io](https://www.shinyapps.io) and [Hugging Face](https://huggingface.co/docs/hub/spaces-sdks-docker-shiny).

-   [Shiny Server](https://posit.co/products/open-source/shinyserver/) (an open-source server developed by the Shiny team).

-   [Posit Connect](https://posit.co/products/enterprise/connect/) (an on-premises commercial server product).

Below we'll cover some deployment basics for Python and R and provide links to additioanal documentation on using the various available methods.

### Shiny for Python

{{< include interactivity/shiny-python/_shiny-deployment.md >}}

### Shiny for R

Quarto Dashboards that use Shiny for R can be deployed using all of the tooling and services available for normal Shiny applications. Shiny for R dashboards are run using the `quarto serve` command:

``` {.bash filename="Terminal"}
quarto serve dashboard.qmd
```

The `quarto serve` command is supported natively by [shinyapps.io](https://www.shinyapps.io), [Shiny Server](https://posit.co/products/open-source/shinyserver/) , and [Posit Connect](https://posit.co/products/enterprise/connect/). See the in-depth documentation on [Shiny for R Deployment](/docs/interactive/shiny/running.qmd#deployment) for details.